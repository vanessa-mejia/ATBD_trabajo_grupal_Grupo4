#Consulta 9: Análisis de la diversidad de géneros por año
Permite ver si la música se ha diversificado o ha sido dominada por unos pocos géneros a lo largo de las décadas. Esto es relevante para entender las influencias cruzadas y la hibridación de géneros en la industria.



from pyspark.sql import SparkSession
from dotenv import load_dotenv
import os

#  Se cargan las variables de entorno
APP_NAME = "Analisis_Diversidad_Generos_Por_Año"

load_dotenv()

# Se configuran los directorios de entrada y salida respectivamente 
INPUT_DIR = str(os.getenv("DATA_DIR"))
OUTPUT_DIR = str(os.getenv("OUTPUT_DIR"))

# Crear la sesión de Spark
spark = SparkSession.builder \
    .appName(APP_NAME) \
    .master("yarn") \
    .getOrCreate()

# Configuración de la Ruta de entrada y salida
data_dir = INPUT_DIR
output_dir = f"{OUTPUT_DIR}/{APP_NAME}/"

#Se leen los datos desde HDFS
df = spark.read.option("header", "true") \
    .option("delimiter", ",") \
    .option("encoding", "latin1") \
    .csv(data_dir)

#Confirmación de tipo de variables
df = df.withColumn("AÑO", col("AÑO").cast("integer")) \
       .withColumn("GENERO", col("GENERO").cast("string"))

# Se agrupar por año y contar cuántos géneros diferentes hay cada año
df_aggregated = df.groupBy("AÑO").agg(spark_countDistinct("GENERO").alias("NUMERO_DE_GENEROS"))

# Se ordenan los resultados por año
df_aggregated = df_aggregated.orderBy("AÑO")

# Se almacenan los resultados en HDFS
df_aggregated.write.mode("overwrite").option("header", "true").csv(output_dir)

#Se muestran los resultados
df_aggregated.show(truncate=False)

#Finaliza sesión
spark.stop()
